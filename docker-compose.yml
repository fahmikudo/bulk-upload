version: "2.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - quarkus

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - quarkus
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  quarkus-bulk-upload-service:
    build:
      context: ./bulk-upload-service
      dockerfile: src/main/docker/Dockerfile.legacy-jar
    image: lreimer/hands-on-quarkus:native
    mem_limit: 128m
    environment:
      - QUARKUS_DATASOURCE_URL=jdbc:postgresql://quarkus-db:5432/quarkus
    ports:
      - "8080:8080"  # the HTTP endpoint
    depends_on:
      quarkus-db:
        condition: service_healthy
    networks:
      - quarkus

  quarkus-bulk-upload-consumer:
    build:
      context: ./bulk-upload-consumer
      dockerfile: src/main/docker/Dockerfile.jvm
    image: lreimer/hands-on-quarkus:native
    mem_limit: 128m
    environment:
      - QUARKUS_DATASOURCE_URL=jdbc:postgresql://quarkus-db:5432/quarkus
    ports:
      - "8081:8081"  # the HTTP endpoint
    depends_on:
      quarkus-db:
        condition: service_healthy
    networks:
      - quarkus

  quarkus-db:
    image: "postgres:10.5"
    mem_limit: 128m
    environment:
      - POSTGRES_USER=quarkus
      - POSTGRES_PASSWORD=quarkus
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quarkus"]
      interval: 5s
      timeout: 5s
      retries: 6
    ports:
      - "5432:5432"
    networks:
      - quarkus

networks:
  quarkus:
    driver: bridge